package CraftingMixingPot

// Extension library imports:
import ItemRestriction

// Local imports:
import CraftingExtensions
import ItemRecipeMixing
import LocalObjectIDs


init
    let mixingUnits = new UnitRequirement("mixingUnits")
    mixingUnits.addUnit(UNIT_POT)
    mixingUnits.addUnit(UNIT_HERB_MASTER)
    mixingUnits.addUnit(UNIT_OMNIGATHERER)

    let anabolicPotion = new ItemRecipeMixing(ITEM_ANABOLIC_POTION, 1, true, ABILITY_QM_ANABOLIC_POTION)
        ..addItem(ITEM_RIVER_STEM)
        ..addItem(ITEM_RIVER_STEM)
        ..addItem(ITEM_RIVER_STEM)
        ..addItem(ITEM_RIVER_STEM)
        ..addRecipeString(ABILITY_QM_ANABOLIC_POTION)

    let beeHive = new ItemRecipeMixing(ITEM_BEE_HIVE, 1, true, ABILITY_QM_BEE_HIVE)
        ..addColorHerb()
        ..addItem(ITEM_RIVER_STEM)
        ..addItem(ITEM_RIVER_STEM)
        ..addRecipeString(ABILITY_QM_BEE_HIVE)

    let netherPotion = new ItemRecipeMixing(ITEM_NETHER_POTION, 2, true, ABILITY_QM_NETHER_POTION)
        ..addColorHerb()
        ..addItem(ITEM_RIVER_STEM)
        ..addItem(ITEM_RIVER_STEM)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addRecipeString(ABILITY_QM_NETHER_POTION)

    let drunkPotion = new ItemRecipeMixing(ITEM_DRUNKS_POTION, 2, true, ABILITY_QM_DRUNKS_POTION)
        ..addColorHerb()
        ..addItem(ITEM_RIVER_ROOT)
        ..addItem(ITEM_RIVER_ROOT)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addRecipeString(ABILITY_QM_DRUNKS_POTION)

    let elementalShieldPotion = new ItemRecipeMixing(ITEM_ELEMENTAL_SHIELD_POTION, 2, true, ABILITY_QM_ELEMENTAL_SHIELD_POTION)
        ..addItem(ITEM_RIVER_STEM)
        ..addColorHerb()
        ..addItem(ITEM_ATHELAS_SEED)
        ..addRecipeString(ABILITY_QM_ELEMENTAL_SHIELD_POTION)

    let healingPotion = new ItemRecipeMixing(ITEM_HEALING_POTION, 1, true, ABILITY_QM_HEALING_POTION)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addItem(ITEM_RIVER_ROOT)
        ..addRecipeString(ABILITY_QM_HEALING_POTION)

    let manaPotion = new ItemRecipeMixing(ITEM_MANA_POTION, 1, true, ABILITY_QM_MANA_POTION)
        ..addItem(ITEM_RIVER_STEM)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addRecipeString(ABILITY_QM_MANA_POTION)

    let antiMagicPotion = new ItemRecipeMixing(ITEM_ANTI_MAGIC_POTION, 2, true, ABILITY_QM_ANTI_MAGIC_POTION)
        ..addColorHerb()
        ..addAthelasSeed()
        ..addRecipeString(ABILITY_QM_ANTI_MAGIC_POTION)

    let cureAll = new ItemRecipeMixing(ITEM_CURE_ALL, 2, true, ABILITY_QM_CURE_ALL)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addRecipeString(ABILITY_QM_CURE_ALL)

    let spiritDarkness = new ItemRecipeMixing(ITEM_SPIRIT_DARKNESS, 0, true, ABILITY_QM_SPIRIT_DARKNESS)
        ..addItem(ITEM_RIVER_STEM)
        ..addItem(ITEM_RIVER_ROOT)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addItem(ITEM_ATHELAS_SEED)
        ..addRecipeString(ABILITY_QM_SPIRIT_DARKNESS)

    let spiritWater = new ItemRecipeMixing(ITEM_SPIRIT_WATER, 0, true, ABILITY_QM_SPIRIT_WATER)
        ..addItem(ITEM_RIVER_ROOT)
        ..addItem(ITEM_RIVER_ROOT)
        ..addRecipeString(ABILITY_QM_SPIRIT_WATER)

    let spiritWind = new ItemRecipeMixing(ITEM_SPIRIT_WIND, 0, true, ABILITY_QM_SPIRIT_WIND)
        ..addItem(ITEM_RIVER_STEM)
        ..addItem(ITEM_RIVER_STEM)
        ..addRecipeString(ABILITY_QM_SPIRIT_WIND)

    // Complex Mixing recipes
    let acidBomb = new ItemRecipeMixing(ITEM_ACID_BOMB, 1, true, ABILITY_QM_ACID_BOMB, 3)
        ..addColorHerb()
        ..addColorHerb()
        ..addColorHerb()
        ..addColorHerb()
        ..addRiverStem()
        ..addRiverStem()

    let diseasePotion = new ItemRecipeMixing(ITEM_DISEASE_POTION, 1, true, ABILITY_QM_DISEASE_POTION, 3)
        ..addRiverRoot()
        ..addColorHerb()
        ..addColorHerb()
        ..addColorHerb()
        ..addColorHerb()

    let essenceBees = new ItemRecipeMixing(ITEM_ESSENCE_BEES, 1, true, ABILITY_QM_ESSENCE_BEES, 2)
        ..addColorHerb()
        ..addColorHerb()
        ..addColorHerb()
        ..addColorHerb()

    let fervorPotion = new ItemRecipeMixing(ITEM_FERVOR_POTION, 1, true, ABILITY_QM_FERVOR_POTION, 2)
        ..addAthelasSeed()
        ..addColorHerb()
        ..addColorHerb()
        ..addColorHerb()

    let gemKnowledge = new ItemRecipeMixing(ITEM_GEM_OF_KNOWLEDGE, 0, true, ABILITY_QM_GEM_OF_KNOWLEDGE, 3)
        ..addColorHerb()
        ..addColorHerb()
        ..addColorHerb()
        ..addColorHerb()

    let omnicure = new ItemRecipeMixing(ITEM_OMNICURE, 1, true, ABILITY_QM_OMNICURE, 1)
        ..addAthelasSeed()
        ..addAthelasSeed()
        ..addColorHerb()
        ..addColorHerb()

    let twinIslandPotion_1 = new ItemRecipeMixing(ITEM_POTION_TWIN_ISLANDS, 1, true, ABILITY_QM_TWIN_ISLANDS)
        ..addItem(ITEM_ORANGE_HERB)
        ..addItem(ITEM_ORANGE_HERB)
        ..addItem(ITEM_ORANGE_HERB)
        ..addItem(ITEM_PURPLE_HERB)
        ..addItem(ITEM_PURPLE_HERB)
        ..addItem(ITEM_PURPLE_HERB)

    let twinIslandPotion_2 = new ItemRecipeMixing(ITEM_POTION_TWIN_ISLANDS, 1, true, 0)
        ..addItem(ITEM_BLUE_HERB)
        ..addItem(ITEM_BLUE_HERB)
        ..addItem(ITEM_BLUE_HERB)
        ..addItem(ITEM_YELLOW_HERB)
        ..addItem(ITEM_YELLOW_HERB)
        ..addItem(ITEM_YELLOW_HERB)

    let oraclePotion = new ItemRecipeMixing(ITEM_ORACLE_POTION, 2, true, ABILITY_QM_ORACLE_POTION)
        ..addColorHerb()
        ..addAthelasSeed()
        ..addAthelasSeed()
        ..addRecipeString(ABILITY_QM_ORACLE_POTION)


    anabolicPotion       .requirement = mixingUnits
    acidBomb             .requirement = mixingUnits
    beeHive              .requirement = mixingUnits
    diseasePotion        .requirement = mixingUnits
    essenceBees          .requirement = mixingUnits
    fervorPotion         .requirement = mixingUnits
    gemKnowledge         .requirement = mixingUnits
    netherPotion         .requirement = mixingUnits
    drunkPotion          .requirement = mixingUnits
    elementalShieldPotion.requirement = mixingUnits
    healingPotion        .requirement = mixingUnits
    manaPotion           .requirement = mixingUnits
    omnicure             .requirement = mixingUnits
    oraclePotion         .requirement = mixingUnits
    antiMagicPotion      .requirement = mixingUnits
    cureAll              .requirement = mixingUnits
    spiritDarkness       .requirement = mixingUnits
    spiritWater          .requirement = mixingUnits
    spiritWind           .requirement = mixingUnits
    twinIslandPotion_1   .requirement = mixingUnits
    twinIslandPotion_2   .requirement = mixingUnits
